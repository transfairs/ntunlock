name: Build and Release Android App

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:

  deploy-web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Data protection
        run: flutter config --no-analytics

      - name: Install dependencies
        run: |
          flutter pub get

      - name: Generate translation packs
        run: flutter gen-l10n

      - name: Build Web
        run: flutter build web --base-href=/ntunlock/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build/web

  build-linux-android:
    runs-on: ubuntu-latest
    needs: deploy-web
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Data protection
        run: flutter config --no-analytics

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang libgtk-3-dev libglu1-mesa
      
      - name: Install App dependencies
        run: |
          flutter pub get

      - name: Generate translation packs
        run: flutter gen-l10n

      - name: Set Variables
        id: vars
        run: |
          echo "APK_NAME=ntunlock-$GITHUB_REF_NAME.apk" >> $GITHUB_OUTPUT
          echo "LINUX_NAME=ntunlock-$GITHUB_REF_NAME-linux-x64.tar.gz" >> $GITHUB_OUTPUT
          echo "TAG_NAME=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT

      - name: Set up Keystore
        run: |
          echo "${{ secrets.SIGNING_KEY }}" | base64 --decode > android/app/keystore.jks
      
      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties

      - name: Build APK for release
        run: |
          flutter build apk --release

      - name: Rename APK
        run: |
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/${{ steps.vars.outputs.APK_NAME }}

      - name: Build Linux App
        run: |
          flutter build linux --release

      - name: Archive Linux build
        run: |
          cd build/linux/x64/release/bundle
          tar -czf "${{ steps.vars.outputs.LINUX_NAME }}" *
          sha256sum "${{ steps.vars.outputs.LINUX_NAME }}" > "${{ steps.vars.outputs.LINUX_NAME }}.sha256"
          cat ${{ steps.vars.outputs.LINUX_NAME }}.sha256

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-android-build
          path: |
            build/app/outputs/flutter-apk/${{ steps.vars.outputs.APK_NAME }}
            build/linux/x64/release/build/${{ steps.vars.outputs.LINUX_NAME }}
            build/linux/x64/release/build/${{ steps.vars.outputs.LINUX_NAME }}.sha256

  build-windows:
    runs-on: windows-latest
    needs: build-linux-android
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Set Variables
        id: vars
        run: |
          echo "WINDOWS_NAME=ntunlock-$GITHUB_REF_NAME-windows-x64.zip" >> $GITHUB_OUTPUT

      - name: Data protection
        run: flutter config --no-analytics

      - name: Install dependencies
        run: |
          flutter pub get

      - name: Generate translation packs
        run: flutter gen-l10n

      - name: Build Windows
        run: flutter build windows --release

      - name: Zip Windows build
        run: |
          cd build/windows/x64/runner/Release
          Compress-Archive -Path * -DestinationPath ${{ steps.vars.outputs.WINDOWS_NAME }}
          Get-FileHash -Algorithm SHA256 ${{ steps.vars.outputs.WINDOWS_NAME }} | ForEach-Object {
            "$($_.Hash) ${{ steps.vars.outputs.WINDOWS_NAME }}" | Out-File -Encoding ASCII ${{ steps.vars.outputs.WINDOWS_NAME }}.sha256
          }

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            build/windows/runner/Release/${{ steps.vars.outputs.WINDOWS_NAME }}
            build/windows/runner/Release/${{ steps.vars.outputs.WINDOWS_NAME }}.sha256

  release:
    runs-on: ubuntu-latest
    needs: [build-linux-android, build-windows]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Create Release with Notes
        uses: softprops/action-gh-release@v2
        with:
          name: $GITHUB_REF_NAME
          body_path: ReleaseNotes.md
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
